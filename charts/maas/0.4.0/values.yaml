## Helm Chart - MaaS - Default values
## Jack Experts

postgresql:
  enabled: true
  image:
    repository: bitnami/postgresql
    tag: 16-debian-12
  clusterName: db-zabbix
  replicaCount: 1
  loadBalancer:
    enabled: false
  backup:
    enabled: false
  secrets:
    credentials:
      PATRONI_SUPERUSER_PASSWORD: "db-zabbix"
      PATRONI_REPLICATION_PASSWORD: "db-zabbix"
      PATRONI_admin_PASSWORD: "db-zabbix"
  persistentVolumes:
    data:
      enabled: true
      size: 5Gi
    wal:
      enabled: true
      size: 1Gi
  resources:
    limits:
      cpu: 1
      memory: 2048Mi
    requests:
      cpu: 500m
      memory: 1024Mi
  prometheus:
    enabled: true
    image:
      repository: wrouesnel/postgres_exporter
      tag: v0.8.0
      pullPolicy: IfNotPresent
  patroni:
    postgresql:
      pg_hba:
      - local     all             postgres                              peer
      - local     all             all                                   md5
      - hostnossl all,replication all                all                reject
      - hostssl   all             all                127.0.0.1/32       md5
      - hostssl   all             all                ::1/128            md5
      - hostssl   replication     standby            all                md5
      - hostssl   all             all                all                md5


letsencrypt:
  enabled: true
  name: letsencrypt-maas
  mail: ""

zabbix:
  enabled: true
  zabbix_image_tag: ubuntu-7.0.0
  postgresql:
    enabled: false
  db_access:
    unified_secret_name: zabbixdb-pguser-zabbix
    db_server_host: "db-zabbix"
    db_server_port: "5432"
    postgres_user: "postgres"
    postgres_password: "zabbix"
    postgres_db: "zabbix"
  zabbixserver:
    replicaCount: 1
    image:
      repository: zabbix/zabbix-server-pgsql
    service:
      type: ClusterIP
      ## Annotations para uso de NLB na AWS ----SE--- type: LoadBalancer
      # annotations:
      #  service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
      #  service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
      #  service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
  zabbixweb:
    enabled: true
    maas: "MaaS - Jack Experts"
    ZBX_LISTENIP: 0.0.0.0
    ZBX_SERVER_HOST: "zabbix-server"
    ZBX_SERVER_PORT: "10051"
    ZBX_SERVER_NAME: "zabbix-server"
    ZBX_DEBUGLEVEL: 3
    ZBX_STARTPOLLERS: 5
    ZBX_JAVAGATEWAY_ENABLE: false
    # ZBX_JAVAGATEWAY=zabbix-java-gateway
    # ZBX_JAVAGATEWAYPORT=10052
    # ZBX_STARTJAVAPOLLERS=5
    ZBX_ENABLE_SNMP_TRAPS: false
    ZBX_CACHESIZE: 256M
    ZBX_TIMEOUT: 30
    # ZBX_VAULTURL=https://127.0.0.1:8200
    # VAULT_TOKEN=
    # ZBX_STARTREPORTWRITERS=0
    # ZBX_WEBSERVICEURL=http://zabbix-web-service:10053/report
    # ZBX_PROXYCONFIGFREQUENCY=3600
    # ZBX_PROXYDATAFREQUENCY=1
    # ZBX_LOADMODULE="dummy1.so,dummy2.so,dummy10.so"

    image:
      repository: zabbix/zabbix-web-nginx-pgsql

  zabbixagent:
    enabled: true
    ZBX_PASSIVE_ALLOW: false
    ZBX_SERVER_NAME: "zabbix-server"
    # ZBX_UNSAFEUSERPARAMETERS: 0
    # ZBX_TLSCONNECT: unencrypted
    ZBX_HOSTNAME: zabbix-agent
    # ZBX_PASSIVESERVERS: 0.0.0.0/0
    ZBX_TIMEOUT: 30
    # ZBX_LOADMODULE: "dummy1.so,dummy2.so,dummy10.so"
    # ZBX_STARTAGENTS: 3
    ZBX_SERVER_HOST: 127.0.0.1
    ZBX_SERVER_PORT: 10051
    ZBX_ACTIVE_ALLOW: true
ingress:
  # -- Enables Ingress
  enabled: false
  # -- Ingress annotations
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  # -- Ingress hosts
  hosts:
  - host: chart-example.local
    paths:
    - path: /
      pathType: ImplementationSpecific
  # -- Ingress TLS configuration
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
  # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
  # ingressClassName: nginx
  # -- pathType is only for k8s >= 1.1=
  pathType: Prefix

grafana:
  enabled: false
  persistence:
    enabled: true
    size: 2Gi
  adminUser: admin
  adminPassword: ""
  plugins:
  - alexanderzobnin-zabbix-app
  env:
    GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: alexanderzobnin-zabbix-datasource
    GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s:%(http_port)s/dash/"
    GF_SERVER_SERVE_FROM_SUB_PATH: true
  dashboards:
    default:
      system-status:
        file: dashboards/system-status.json
      cpu-utilization:
        file: dashboards/cpu-utilization.json
      dashboard-servers:
        file: dashboards/dashboard-servers.json
      memory-utilization:
        file: dashboards/memory-utilization.json
      disk-utilization:
        file: dashboards/disk-utilization.json
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: "Zabbix"
        type: "alexanderzobnin-zabbix-datasource"
        url: "http://zabbix-web/api_jsonrpc.php"
        access: "proxy"
        orgId: 1
        isDefault: true
        jsonData:
          username: "grafana"
        secureJsonData:
          password: "grafana"
        editable: true

  ingress:
    # -- Enables Ingress
    enabled: false
  # -- Ingress annotations
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  # -- Ingress hosts
  hosts:
  - host: chart-example.local
    paths:
    - path: /
      pathType: ImplementationSpecific
  # -- Ingress TLS configuration
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
  # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
  # ingressClassName: nginx
  # -- pathType is only for k8s >= 1.1=
  pathType: Prefix

rundeck:
  enabled: false
  rundeck:
    adminUser: "admin:admin,user,admin,architect,deploy,build"
    env:
      RUNDECK_GRAILS_URL: "http://{{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local"
      RUNDECK_SERVER_FORWARDED: "true"
      RUNDECK_LOGGING_STRATEGY: "CONSOLE"

  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: "nginx"
      cert-manager.io/issuer: "letsencrypt-maas"
      nginx.ingress.kubernetes.io/proxy-body-size: "200m"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
      nginx.ingress.kubernetes.io/proxy-buffers-number: "100"
      nginx.ingress.kubernetes.io/proxy-buffer-size: "200m"
      nginx.ingress.kubernetes.io/client-body-buffer-size: "200m"
    path: /
    domain: chart-example.local
    tls:
      enabled: true
      secretName: zabbix-ssl
  persistence:
    #  claims:

    # By default 
    # - name: rundeck
    #   volumeName: data 
    #   accessMode: ReadWriteOnce
    #   size: 20Gi
    #   storageClass: null

    # - name: plugins
    #   accessMode: ReadWriteOnce
    #   size: 1Gi
    #   storageClass: null

    create: true # Create plugin and data Persistent Volume Claims.
    enabled: true # Enable persistence using Persistent Volume Claims.

